@page "/addproduct"
@attribute [Authorize(Policy = "AdminOnly")]

@using CoreBussiness;
@inject UseCases.UseCasesInterfaces.IViewCategoriesUseCase ViewCategoriesUseCase
@inject UseCases.UseCasesInterfaces.IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>
@if(product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="mb-3">
            <label for="name"> Name </label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="mb-3">
            <label for="category"> Category </label>
            <select id="category" @bind="product.CategoryId" class="form-select">
                <option value="0"></option>
                @foreach(var cat in categories)
                {
                    <option value="@cat.CategoryId"> @cat.Name </option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label for="price"> Price </label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <div class="mb-3">
            <label for="qty"> Quantity </label>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <br/>
        <button type="submit" class="btn btn-primary"> Save </button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel"> Cancel </button>
    </EditForm>
}

@code {
    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();
        categories = ViewCategoriesUseCase.Execute();
    }

    private void OnValidSubmit()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/product");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/product");
    }
}
